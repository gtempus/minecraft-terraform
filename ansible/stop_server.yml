- name: simple task
  hosts: all
  gather_facts: true
  vars:
    ansible_python_interpreter: "/usr/bin/python3"
    ansible_connection: aws_ssm
    ansible_aws_ssm_bucket_name: gtempus-minecraft-server-ansible
    ansible_aws_ssm_region: us-east-2
    ansible_aws_ssm_instance_id: instance-id
    device_name: /dev/xvdf
    mount_point: /mnt/ebs_volume
    s3_minecraft_file: 'bedrock-server-1.20.51.01.zip'
    local_path: '/tmp/bedrock-server.zip'
    minecraft_server_directory: "{{ mount_point }}/minecraft"
    extraction_path: "{{ minecraft_server_directory }}"
    s3_minecraft_systemd_file: 'minecraft.service'
  tasks:
    - name: Set the filename with a timestamp
      set_fact:
        zipfile: "/tmp/worlds_backup_{{ ansible_date_time.iso8601_basic_short }}.zip"

    - name: Stop minecraft server service
      become: true
      ansible.builtin.service:
        name: "{{ s3_minecraft_systemd_file }}"
        state: stopped

    - name: Archive the directory with timestamp
      ansible.builtin.archive:
        path: "{{ minecraft_server_directory }}/worlds"
        dest: "{{ zipfile }}"
        format: zip

    - name: Install pip (Debian/Ubuntu)
      become: true
      ansible.builtin.apt:
        name: python3-pip
        state: present

    - name: Install required Python libraries for AWS
      ansible.builtin.pip:
        name:
          - boto3
          - botocore
        state: present

    - name: Upload zip file to S3
      ansible.builtin.aws_s3:
        bucket: "{{  ansible_aws_ssm_bucket_name }}"
        object: "/backups/{{ zipfile | basename }}"
        src: "{{ zipfile }}"
        mode: put
